<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="LODE">
  <property environment="env"/>
  <property name="env.SERVLET_DIR" value="/usr/share/tomcat7/lib"/>
  <property name="env.SERVLET_JAR" value="servlet-api.jar"/>
  <property name="env.SPECIFICATION_VERSION" value="1.2"/>
  <property name="env.SPECIFICATION_VENDOR" value="Silvio Peroni, U.Bologna, http://www.essepuntato.it/lode"/>
  <property name="env.IMPLEMENTATION_VERSION" value="2.0.0.SNAPSHOT"/>
  <property name="env.IMPLEMENTATION_VENDOR" value="UNKNOWN"/>
  <property name="env.BUILD_DIR" value="build"/>
  <property name="env.OUT_DIR" value="out"/>
  <property name="env.OUT_FILE" value="LODE-${env.IMPLEMENTATION_VERSION}"/>
  <property name="env.TEST_URL" value="http://www.essepuntato.it/2008/12/earmark"/>
  <property name="env.TEST_PATH" value="test/earmark.rdf"/>
  <property name="env.TEST_HTML" value="test/earmark.htm"/>
  <property name="absoluteTestPath" location="${env.TEST_PATH}"/>
  <property name="absoluteTestHtml" location="${env.TEST_HTML}"/>
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant" classpath="lib/maven-ant-tasks.jar"/> 
    <condition property="maven.repo.local" value="${maven.repo.local}" else="${user.home}/.m2/repository">
      <isset property="maven.repo.local"/>
    </condition>           
    <echo>maven.repo.local=${maven.repo.local}</echo>
    <artifact:localRepository id="local.repository" path="${maven.repo.local}"/> 
    <artifact:pom file="pom.xml" id="maven.project"/>
    <artifact:dependencies pathId="compile.classpath" filesetId="compile.fileset" useScope="compile">
      <pom refid="maven.project"/>
      <localRepository refid="local.repository"/>
    </artifact:dependencies>
    <artifact:dependencies pathId="test.classpath" filesetId="test.fileset" useScope="test">
      <pom refid="maven.project"/>
      <localRepository refid="local.repository"/>
    </artifact:dependencies>
    <artifact:dependencies pathId="runtime.classpath" filesetId="runtime.fileset" useScope="runtime">
      <pom refid="maven.project"/>
      <localRepository refid="local.repository"/>
    </artifact:dependencies>
  </target>
  <target name="clean">
  	<delete dir="${env.BUILD_DIR}" />
  </target>
  <target name="compile" depends="mvn-init,clean">
    <mkdir dir="build" />
    <copy todir="build">
      <fileset dir="src/main/webapp">
      </fileset>
    </copy>  	
    <mkdir dir="build/WEB-INF/classes" />
    <javac destdir="build/WEB-INF/classes" srcdir="src/main/java" classpathref="compile.classpath" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:deprecation"/>
  	  <!--
      <classpath>
        <fileset dir="build/WEB-INF/lib">
          <include name="*" />
        </fileset>
        <fileset dir="${env.SERVLET_DIR}">
          <include name="${env.SERVLET_JAR}"/>
        </fileset>
      </classpath>
      -->
    </javac>
    <copy todir="build/WEB-INF/classes">
      <fileset dir="src/main/java">
        <exclude name="**/*.java" />
      </fileset>
    </copy>
  	<tstamp>
  	  <format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
    </tstamp>
  	<manifest file="build/META-INF/MANIFEST.MF">
	  <attribute name="Specification-Title" value="LODE"/>  
	  <attribute name="Specification-Version" value="${env.SPECIFICATION_VERSION}"/>
	  <attribute name="Specification-Vendor" value="${env.SPECIFICATION_VENDOR}"/>
  	  <attribute name="Implementation-Title" value="LODE Servlets"/>  
  	  <attribute name="Implementation-Version" value="${env.IMPLEMENTATION_VERSION}"/>
  	  <attribute name="Implementation-Vendor" value="${env.IMPLEMENTATION_VENDOR}"/>
  	  <attribute name="Build-Date" value="${TODAY}"/>                 
  	</manifest>
  </target>
  <target name="war" depends="compile">
    <war basedir="content" destfile="${env.OUT_DIR}/${env.OUT_FILE}.war" webxml="content/WEB-INF/web.xml">
      <webinf dir="content/WEB-INF/">
        <include name="**/*.jar" />
      </webinf>
    </war>
  </target>
  <target name="jar" depends="compile">
  	<copy todir="${env.BUILD_DIR}/server">
      <fileset dir="content/server"/>
  	</copy>
  	<copy todir="${env.BUILD_DIR}/client">
  	  <fileset dir="content/client"/>
  	</copy>
  	<copy todir="${env.BUILD_DIR}/lib">
  	  <fileset dir="content/WEB-INF/lib"/>
  	</copy>
  	<path id="lib.jars">
  	  <fileset dir="${env.BUILD_DIR}/">
  	  	<include name="lib/*.jar"/>
  	  </fileset>
	</path>
  	<manifestclasspath property="lib.jar.list" jarfile="${env.BUILD_DIR}/${env.OUT_FILE}.jar">
  	  <classpath refid="lib.jars" />
  	</manifestclasspath>
  	<echo message="Classpath: ${lib.jar.list}"/>
  	<jar destfile="${env.BUILD_DIR}/${env.OUT_FILE}.jar" basedir="content/WEB-INF/classes">
  	  <manifest>
  	    <attribute name="Specification-Title" value="LODE"/>  
  	    <attribute name="Specification-Version" value="${env.SPECIFICATION_VERSION}"/>
  	    <attribute name="Specification-Vendor" value="${env.SPECIFICATION_VENDOR}"/>
    	<attribute name="Implementation-Title" value="LODE Command Line"/>  
    	<attribute name="Implementation-Version" value="${env.IMPLEMENTATION_VERSION}"/>
    	<attribute name="Implementation-Vendor" value="${env.IMPLEMENTATION_VENDOR}"/>
    	<attribute name="Build-Date" value="${TODAY}"/>                 
  	  	<attribute name="Main-Class" value="au.csiro.lode.LodeApp"/>
  	  	<attribute name="Class-Path" value="${lib.jar.list}"/>
  	  </manifest>
  	</jar>
  	<tar destfile="${env.OUT_DIR}/${env.OUT_FILE}_cmd-line.tar.gz" basedir="${env.BUILD_DIR}" compression="gzip"/>
  </target>
  <target name="can_cmd_line">
  	<available file="${env.BUILD_DIR}/${env.OUT_FILE}.jar" property="jar.exists"/>
  </target>	
  <target name="do_cmd_line" depends="can_cmd_line" if="jar.exists">
	<java jar="${env.BUILD_DIR}/${env.OUT_FILE}.jar" fork="true">
	  <arg value="-url"/>
	  <arg value="${env.TEST_URL}"/>
	  <arg value="-path"/>
	  <arg value="${absoluteTestPath}"/>
	  <arg value="-html"/>
	  <arg value="${absoluteTestHtml}"/>
	  <arg value="-imported"/>
	  <arg value="-closure"/>
	  <arg value="-reasoner"/>
  	</java>
  </target>	
  <target name="build" depends="compile">
  </target>	
  <target name="all" depends="war,jar">
  </target>	
</project>
